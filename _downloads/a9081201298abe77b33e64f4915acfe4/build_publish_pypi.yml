name: build_publish_pypi

on:
  release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install setuptools wheel twine build

      - name: Set up QEMU for arm64 builds
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64"

      - name: Build distribution wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          CIBW_SKIP: "pp* *musllinux*"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux_2_28_x86_64"
          CIBW_MANYLINUX_AARCH64_IMAGE: "quay.io/pypa/manylinux_2_28_aarch64"
          CIBW_BEFORE_ALL: "bash scripts/before_all.sh"
          CIBW_BEFORE_BUILD: "bash scripts/before_build.sh"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"
      
      - name: Build source distribution
        run: python -m build --sdist --outdir ./wheelhouse
      
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

      - name: Build and publish
        env:
            TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
            TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
            twine upload wheelhouse/*